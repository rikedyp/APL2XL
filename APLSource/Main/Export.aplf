 Export←{
     ⍝. ⍵          ←→ namespace containing:
     ⍝. ⍵.FileName ←→ the name to be written to, either relative or fully qualified
     ⍝. ⍵.Sheets   ←→ array of "worksheet" namespaces
     ⍝. ⍵.Sheets[n]           ←→ namespace containing:
     ⍝. ⍵.Sheets[n].Name      ←→ name of a worksheet found in a workbook
     ⍝. ⍵.Sheets[n].Ranges    ←→ array of value ranges and formatting information
     ⍝. ⍵.Sheets[n].Ranges[n]              ←→ namespace containing:
     ⍝. ⍵.Sheets[n].Ranges[n].NumberFormat ←→ apply numberformat to range
     ⍝. ⍵.Sheets[n].Ranges[n].Value        ←→ values in the range
     ⍝. ⍵.Sheets[n].Ranges[n].Address      ←→ address can be either indices i.e. ←→ 0 0 (at cell A1) or cell string i.e. ←→ 'A1' (at index 0 0)

     ⍝. Validation
     0::⎕SIGNAL⊂⎕DMX.(('EN'EN)('Message'Message))     
     777::⎕SIGNAL⊂('EN' 11)('Message'GetErrorMessage)
     ∨/2<≢∘⍴¨(∊(,⍵.Sheets).Ranges).Value:⎕SIGNAL⊂('EN' 4)('Message' 'Range values must be less than rank 3')
     ∨/2<≡¨(∊(,⍵.Sheets).Ranges).Value:⎕SIGNAL⊂('EN' 11)('Message' 'Range values must be less than depth 3')('EM' 'DEPTH ERROR')

     ⍝. Create an empty namespace with containers for the intermediate data representation used for compiling XML
     wb←##.Main.XL.WB ⍵.FileName 1

     ⍝. Add each of the ranges in this sheet to the wb worksheet table
     sheets←{
         wb←⍺
         sheet←⍵
         wb.SheetRowHeights⍪←{0<⍵.⎕NC'RowHeight':⍵.(Name RowHeight) ⋄ ⍵.Name(0 2⍴⍬)}sheet
         sheet.ColumnWidth←{0<⍵.⎕NC'ColumnWidth':⍵.ColumnWidth ⋄ ''}sheet
         _←wb ##.Main.XL.WSProps sheet ⍝ handle global properties like sheets
         {wb ranges(sheet.Name)⍵}¨⍵.Ranges
     }

     ⍝. Add a range to the worksheet table in wb
     ranges←{
         (sname range)←⍵
         range.(Value MergeCells)←{0<⍵.⎕NC'MergeCells':⍵.Value range.MergeCells ⋄ ⍵.Value 0}range
         n←⍴range.Value
         range.Address←{83=⎕DR ⍵:##.Main.XL.itc ⍵ ⋄ ⍵}range.Address ⍝ Convert indices to cell values: 0 0 → 'A1'
         fontProps←'Size' 'Color' 'Name' 'Family' 'Italic' 'Bold' 'Underline'
         extract←{⊂,⍉⊂⍤1⍉↑(⊂⍵)∘{0<⍺.⎕NC ⍵:n⍴⍺⍎⍵ ⋄ n⍴12 1 'Calibri' 2 0 0 0[fontProps⍳⊂⍵]}¨fontProps}
         font←{0<⍵.⎕NC'Font':extract ⍵⍎'Font' ⋄ ⊆''}range
         styles←range∘{0<⍺.⎕NC ⍵:⊆⍺⍎⍵ ⋄ ''}¨'NumberFormat' 'Fill' 'Border' 'WrapText' 'Horizontal' 'Vertical' 'ShrinkToFit' ⍝ Collect all of the styles in the range
         ⍺ ##.Main.XL.WSAdd sname range.Address(styles[0],font,1↓styles)(range.Value)range.MergeCells               ⍝ Add this range to an intermediate table
     }

     nameSheets←{
         s←,⍵
         n←{6::'' ⋄ ⍵.Name}¨s
         d←'Sheet'∘,¨⍕¨1+⍳≢s
         m←⍸0=≢¨n
         r←(≢m)↑d~n
         s.Name←(r@m)n
         ⍵
     }

     _←wb sheets¨nameSheets ⍵.Sheets
     6::⎕SIGNAL⊂('EN' 16)('Message' '.NET unavailable')
     ##.Main.Build.CompileXML wb ⍝. Compile the workbook file as a .xlsx zipped directory
 }
